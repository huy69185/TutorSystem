CREATE DATABASE TutorSystem;
GO
USE TutorSystem;
GO
CREATE TABLE Users (
    UserId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    FullName NVARCHAR(100) NOT NULL,
    Email NVARCHAR(255) UNIQUE NOT NULL,
    PasswordHash NVARCHAR(255) NOT NULL,
    PhoneNumber NVARCHAR(20) NULL,
    University NVARCHAR(255) NULL,
    Role NVARCHAR(20) CHECK (Role IN ('Tutor', 'Student')) NOT NULL,
    CreatedAt DATETIME DEFAULT GETDATE(),
    UpdatedAt DATETIME DEFAULT GETDATE()
);

CREATE TABLE Subjects (
    SubjectId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    SubjectName NVARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE Tutors (
    TutorId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    UserId UNIQUEIDENTIFIER UNIQUE NOT NULL,
    Bio NVARCHAR(500) NULL,
    HourlyRate DECIMAL(10,2) NOT NULL CHECK (HourlyRate > 0),
    Rating FLOAT DEFAULT 0,
    ReviewsCount INT DEFAULT 0,
    AvailableHours NVARCHAR(255) NULL, -- JSON lưu lịch rảnh
    IsApproved BIT DEFAULT 0, -- 0: Chưa duyệt, 1: Đã duyệt
    ApprovedBy UNIQUEIDENTIFIER NULL, -- Admin duyệt
    ApprovedAt DATETIME NULL,
    FOREIGN KEY (UserId) REFERENCES Users(UserId) ON DELETE CASCADE
);

CREATE TABLE TutorSubjects (
    TutorId UNIQUEIDENTIFIER NOT NULL,
    SubjectId UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY (TutorId, SubjectId),
    FOREIGN KEY (TutorId) REFERENCES Tutors(TutorId) ON DELETE CASCADE,
    FOREIGN KEY (SubjectId) REFERENCES Subjects(SubjectId) ON DELETE CASCADE
);

CREATE TABLE TutorDocuments (
    DocumentId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    TutorId UNIQUEIDENTIFIER NOT NULL,
    DocumentType NVARCHAR(50) CHECK (DocumentType IN ('Degree', 'Transcript', 'Certificate')),
    FilePath NVARCHAR(255) NOT NULL, -- Đường dẫn file
    UploadedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (TutorId) REFERENCES Tutors(TutorId) ON DELETE CASCADE
);

CREATE TABLE Students (
    StudentId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    UserId UNIQUEIDENTIFIER UNIQUE NOT NULL,
    FOREIGN KEY (UserId) REFERENCES Users(UserId) ON DELETE CASCADE
);

CREATE TABLE Bookings (
    BookingId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    StudentId UNIQUEIDENTIFIER NOT NULL,
    TutorId UNIQUEIDENTIFIER NOT NULL,
    SubjectId UNIQUEIDENTIFIER NOT NULL,
    BookingDate DATETIME NOT NULL,
    StartTime TIME NOT NULL,
    EndTime TIME NOT NULL,
    Status NVARCHAR(20) CHECK (Status IN ('Pending', 'Confirmed', 'Completed', 'Cancelled')) DEFAULT 'Pending',
    Price DECIMAL(10,2) NOT NULL CHECK (Price > 0),
    CreatedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (StudentId) REFERENCES Users(UserId) ON DELETE NO ACTION,
    FOREIGN KEY (TutorId) REFERENCES Tutors(TutorId) ON DELETE NO ACTION,
    FOREIGN KEY (SubjectId) REFERENCES Subjects(SubjectId) ON DELETE NO ACTION
);


CREATE TABLE Payments (
    PaymentId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    BookingId UNIQUEIDENTIFIER NOT NULL,
    StudentId UNIQUEIDENTIFIER NOT NULL,
    TutorId UNIQUEIDENTIFIER NOT NULL,
    Amount DECIMAL(10,2) NOT NULL CHECK (Amount > 0),
    PlatformFee DECIMAL(10,2) NOT NULL CHECK (PlatformFee >= 0),
    TutorEarnings DECIMAL(10,2) NOT NULL CHECK (TutorEarnings > 0),
    PaymentStatus NVARCHAR(20) CHECK (PaymentStatus IN ('Pending', 'Paid', 'Failed')) DEFAULT 'Pending',
    PaymentDate DATETIME NULL,
    FOREIGN KEY (BookingId) REFERENCES Bookings(BookingId) ON DELETE NO ACTION,
    FOREIGN KEY (StudentId) REFERENCES Users(UserId) ON DELETE NO ACTION,
    FOREIGN KEY (TutorId) REFERENCES Tutors(TutorId) ON DELETE NO ACTION
);

CREATE TABLE Reviews (
    ReviewId UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    BookingId UNIQUEIDENTIFIER UNIQUE NOT NULL,
    StudentId UNIQUEIDENTIFIER NOT NULL,
    TutorId UNIQUEIDENTIFIER NOT NULL,
    Rating INT CHECK (Rating BETWEEN 1 AND 5) NOT NULL,
    Comment NVARCHAR(1000) NULL,
    CreatedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (BookingId) REFERENCES Bookings(BookingId) ON DELETE NO ACTION,
    FOREIGN KEY (StudentId) REFERENCES Users(UserId) ON DELETE NO ACTION,
    FOREIGN KEY (TutorId) REFERENCES Tutors(TutorId) ON DELETE NO ACTION
);

